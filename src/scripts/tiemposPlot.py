import numpy as np
import matplotlib.pyplot as plt
from cStringIO import StringIO 
import pylab

txt = open('resultados_alpha.txt', 'r').read() 

# alphas = np.loadtxt(
# 	StringIO(txt.replace("Alpha: ",''))	,
# dtype = int)
alphas = np.array([1,56,112,168,224,280,336,392,448,504,560,616,672,728,784])
valoresPCA10k = np.array([[6787, 6713, 6707, 6710, 6732, 6706, 6698, 6696, 6693, 6696],
						[8204, 8174, 8174, 8180, 8175, 8174, 8171, 8174, 8171, 8176],
						[9684, 9729, 9729, 9731, 9726, 9730, 9725, 9733, 9727, 9733],
						[11179, 11227, 11272, 11274, 11264, 11269, 11266, 11274, 11264, 11225],
						[12714, 12724, 12698, 12716, 12726, 12791, 12727, 12726, 12793, 12791],
						[14343, 14255, 14340, 14335, 14327, 14337, 14279, 14336, 14333, 14308],
						[15641, 15645, 15639, 15631, 15614, 15624, 15608, 15661, 15610, 15609],
						[17086, 17125, 17121, 17121, 17124, 17139, 17117, 17126, 17121, 17126],
						[18567, 18578, 18573, 18576, 18563, 18580, 18567, 18572, 18567, 18558],
						[20035, 20038, 20256, 20033, 20040, 20283, 20295, 20031, 20267, 20316],
						[21815, 21788, 21804, 21786, 21806, 21809, 21544, 21818, 21825, 21519],
						[23080, 23301, 23001, 23263, 23005, 23265, 23305, 23000, 23278, 23301],
						[24792, 24848, 24839, 24829, 24832, 24820, 24863, 24833, 24869, 24841],
						[25989, 26486, 26490, 26474, 26478, 26479, 26504, 26467, 26501, 26454],
						[27861, 27513, 27530, 27509, 27528, 27509, 27526, 27511, 27523, 27513]]
)

valoresPCA20k = np.array([[13090, 13058, 13057, 13057, 13056, 13057, 13057, 13057, 13056, 13057],
						[14917, 14911, 14910, 14908, 14913, 14911, 14911, 14912, 14913, 14911],
						[16835, 16790, 16802, 16656, 16615, 16601, 16594, 16596, 16595, 16595],
						[18482, 18547, 18493, 18492, 18567, 18490, 18560, 18493, 18497, 18496],
						[20372, 20437, 20370, 20342, 20350, 20338, 20338, 20334, 20339, 20407],
						[22291, 22200, 22305, 22256, 22200, 22197, 22199, 22200, 22201, 22201],
						[24065, 24081, 24069, 24080, 24288, 24082, 24095, 24069, 24078, 24079],
						[25940, 25950, 25958, 25964, 26118, 26104, 25967, 25959, 26056, 26102],
						[27828, 27812, 27814, 27828, 27817, 27824, 27962, 27798, 28240, 28465],
						[30388, 30387, 30385, 30378, 30389, 30387, 30374, 30375, 30556, 30415],
						[32274, 32276, 32275, 32295, 32305, 32312, 32301, 32035, 31593, 31601],
						[33512, 33490, 33470, 33467, 33465, 33499, 33484, 33461, 33502, 33465],
						[35357, 35391, 35377, 35364, 35374, 35372, 35387, 35375, 35384, 35356],
						[37285, 37353, 37335, 37332, 37332, 37348, 37335, 37330, 37305, 37351],
						[39132, 39066, 39048, 39050, 39042, 39043, 39043, 39044, 39045, 39044]]
)

valoresPLS10k = np.array([[837, 837, 830, 832, 836, 829, 834, 835, 830, 836], 
						[26519, 26762, 26833, 27028, 27224, 25330, 25144, 25511, 25532, 24952], 
						[51438, 55977, 54634, 54195, 54289, 53087, 53090, 53112, 53199, 53111], 
						[79772, 75170, 75400, 75350, 75275, 75203, 75370, 75377, 75065, 75105], 
						[100486, 99575, 99706, 99771, 99822, 99645, 99758, 99752, 99505, 99764], 
						[124120, 122504, 122442, 122489, 122447, 122450, 122355, 122465, 122165, 122713], 
						[146861, 147977, 147324, 147515, 147613, 147391, 147746, 147504, 147509, 147570], 
						[171222, 169289, 168668, 168824, 168700, 169003, 168882, 168823, 168798, 168836], 
						[192951, 192286, 192223, 192166, 192526, 192729, 192243, 192266, 192315, 191972], 
						[215791, 215035, 215729, 215174, 215665, 215373, 215351, 215078, 215392, 215642], 
						[239188, 241438, 241918, 242204, 241902, 242122, 241473, 242084, 242352, 242201], 
						[266253, 267550, 266511, 267015, 267597, 267136, 267120, 267010, 266845, 267471], 
						[292541, 291169, 291175, 291304, 291423, 291402, 291246, 291715, 291423, 292000], 
						[314920, 313765, 313417, 313782, 313965, 313630, 315066, 313786, 314659, 315092], 
						[338966, 329021, 329942, 330297, 330221, 329580, 330352, 330563, 329938, 330514], ]
)
valoresPLS20k = np.array([[1656, 1624, 1624, 1624, 1624, 1623, 1624, 1624, 1624, 1624], 
						[48606, 48321, 44703, 42613, 42588, 42584, 42583, 42586, 42598, 42635], 
						[84567, 84572, 84759, 84714, 84675, 84676, 84685, 84658, 84664, 84675], 
						[126641, 126293, 126194, 126199, 126237, 126193, 126190, 126192, 126292, 126194], 
						[168094, 168260, 168172, 168148, 168465, 168195, 168242, 168244, 168256, 168468], 
						[210243, 210419, 210414, 210560, 210404, 210398, 210397, 210498, 210420, 210420], 
						[252534, 252360, 252245, 252396, 252352, 252755, 252401, 252338, 252464, 252431], 
						[294045, 293857, 294216, 293914, 293860, 294872, 293898, 293856, 294826, 292270], 
						[334000, 334755, 333786, 334105, 333836, 333852, 334534, 333885, 334227, 334983], 
						[375858, 376471, 375939, 376103, 376002, 376122, 376877, 376177, 381240, 382289], 
						[418243, 426486, 420597, 419047, 417724, 418825, 425468, 422111, 417887, 418399], 
						[459264, 468281, 461903, 463590, 466817, 467846, 462480, 460149, 459352, 467751], 
						[513667, 511951, 512907, 513256, 513437, 513181, 522689, 512333, 515091, 522131], 
						[554236, 558694, 569025, 557275, 555273, 558258, 556249, 549245, 552046, 548489], 
						[586590, 589243, 582374, 590237, 580307, 587878, 579192, 578666, 577591, 577853]]
)

devilPCA10k = np.empty(np.shape(alphas)[0])
devilPCA20k = np.empty(np.shape(alphas)[0])
devilPLS10k = np.empty(np.shape(alphas)[0])
devilPLS20k = np.empty(np.shape(alphas)[0])
meanPCA10k = np.empty(np.shape(alphas)[0])
meanPCA20k = np.empty(np.shape(alphas)[0])	
meanPLS10k = np.empty(np.shape(alphas)[0])
meanPLS20k = np.empty(np.shape(alphas)[0])
for i in range(0,len(valoresPCA10k)):
	devilPCA10k[i] = np.std(valoresPCA10k[i])
	meanPCA10k[i] = np.mean(valoresPCA10k[i])
	devilPCA20k[i] = np.std(valoresPCA20k[i])
	meanPCA20k[i] = np.mean(valoresPCA20k[i])

	devilPLS10k[i] = np.std(valoresPLS10k[i])
	meanPLS10k[i] = np.mean(valoresPLS10k[i])
	devilPLS20k[i] = np.std(valoresPLS20k[i])
	meanPLS20k[i] = np.mean(valoresPLS20k[i])

fig = plt.figure()
ax = fig.add_subplot(111)
ax.set_xlabel("Alphas/Gammas", fontsize = 16)
ax.set_ylabel("Tiempo (Milisegundos)", fontsize = 16)
ax.errorbar(alphas, meanPCA10k, yerr=devilPCA10k, color = "limegreen", label='PCA (10k)')
ax.errorbar(alphas, meanPCA20k, yerr=devilPCA20k, color = "g", label='PCA (20k)')
ax.errorbar(alphas, meanPLS10k, yerr=devilPLS10k, color = "deepskyblue", label='PLS (10k)')
ax.errorbar(alphas, meanPLS20k, yerr=devilPLS20k, color = "b", label='PLS (20k)')
pylab.legend(loc='upper left')
plt.title('Comparacion de tiempos:', fontsize = 18)

plt.show()